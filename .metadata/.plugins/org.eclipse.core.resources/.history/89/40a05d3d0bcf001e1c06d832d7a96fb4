package com.ruby.java.ch08.innerClass;

class Node3 {
	int data;
	Node3 link;
	public Node3(int data) {
		this.data = data; link = null;
	}
}
class LinkedList3 {
	Node3 first;
	
	LinkedList3(int data) {
		first = new Node3(data);
	}
	
	void append(int data) {
		Node3 p = first, q = null;

		//리스트 순회
		Node3 next = first;
		while(next.link != null) {
			next = next.link;
		}
		next.link = new Node3(data);
	}
	void showList() {
		System.out.println();
		Node3 p = first;
		
		// 인덱스 출력		
		int idx = 0;
		Node3 next = first;
		while(next.link != null) {
			next = next.link;
			System.out.print(" " + (idx++) + " ");
		}
		
		
		System.out.println();
		next = first;
		while(next.link != null) {
			next = next.link;

			if (next.data < 10)
				System.out.print(" ");
			System.out.print(next.data+ " ");
		}
		System.out.println();
		System.out.println();

	}
	void insert(int data) {
		Node3 newNode = new Node3(data);
		Node3 p = first, q = null;
		
		Node3 next = first;
		boolean newPutted = false;
		while(next.link != null) {
		
			// next.data 와 비교
			
			// next.data < data
			if(next.data < data) {
				// 바로 넘어간다
				next = next.link;
			} else {
				
				if(!newPutted) {
					// next, newNode, next.link
					// next -> next.link 를 next -> newNode, newNode -> next.link 로 변경헤야 한다
					Node3 last = next.link;
					next.link = newNode;
					newNode = last;
					next.link = last;
					newPutted = true;
					
					System.out.println("next = " + next.data);
					System.out.println("newNode = " + newNode.data);
					System.out.println("last = " + last);
				} else {
					// newNode 입력함
					next = next.link;
				}
			}
			
			
		}
	}

}

public class Test_연결리스트와배열 {
	static int getList(int[]data) {
		int count = 0;
		int mid = data.length/2;
		for (int i = 0; i <= mid; i++) {
			data[i] = i * 5; count++;
		}
		return count; // 넣은 데이터 갯수 리턴
	}
	static void showList(int[]data) { // 인덱스도 출력하고 값도 출력하는 코드
		System.out.println();
		for (int i=0; i < data.length; i++)
			System.out.print(" " + i + " ");
		System.out.println();
		for (int i = 0; i < data.length; i++) {
			if (data[i] < 10)
				System.out.print(" ");
			System.out.print(data[i]+ " ");
		}
		System.out.println();
	}
	static int insertList(int[] data, int count, int x) {
		int indx = 0; //data의 인덱스
		
		int LENGTH = data.length;
		int[] result = new int[LENGTH];
		
		boolean xPutted = false;
 		for(int i = 0; i < LENGTH; i++) {
 			
 			if(xPutted) {
 				result[i] = data[indx++];
 				continue;
 			}
 		
 			if(data[indx] < x) result[i] = data[indx++];
 			else {
 				result[i] = x;
 				xPutted = true;
 			}
 			
 		}
 		
 		for(int i = 0; i < LENGTH; i++) data[i] = result[i];
 		
		return 0;
	}
	public static void main(String[] args) {
		
		/*
		int[]list = new int[10];
		int count = 0;
		System.out.println("배열로 리스트::");
		count = getList(list);
		showList(list);
		
		count = insertList(list, count, 3); // 3 들어가고 count 는 배열의 갯수
		showList(list);
		count = insertList(list, count, 7);
		showList(list);
		*/
		LinkedList3 ll = new LinkedList3(0);
		ll.append(5);ll.append(10);ll.append(15);ll.append(20);ll.append(25);
		ll.showList();
		
		ll.insert(3);ll.showList();
		
		/*
		ll.insert(3);ll.showList();
		ll.insert(7);ll.showList();
		*/
	}
}
