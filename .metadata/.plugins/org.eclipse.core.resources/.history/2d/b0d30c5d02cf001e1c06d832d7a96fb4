package com.ruby.java.ch08.innerClass;

class Node3 {
	int data;
	Node3 link;
	public Node3(int data) {
		this.data = data; link = null;
	}
}
class LinkedList3 {
	Node3 first;
	void append(int data) {
		Node3 p = first, q = null;

	}
	void showList() {
		System.out.println();
		Node3 p = first;

	}
	void insert(int data) {
		Node3 newNode = new Node3(data);
		Node3 p = first, q = null;
	}

}

public class Test_연결리스트와배열 {
	static int getList(int[]data) {
		int count = 0;
		int mid = data.length/2;
		for (int i = 0; i <= mid; i++) {
			data[i] = i * 5; count++;
		}
		return count; // 넣은 데이터 갯수 리턴
	}
	static void showList(int[]data) { // 인덱스도 출력하고 값도 출력하는 코드
		System.out.println();
		for (int i=0; i < data.length; i++)
			System.out.print(" " + i + " ");
		System.out.println();
		for (int i = 0; i < data.length; i++) {
			if (data[i] < 10)
				System.out.print(" ");
			System.out.print(data[i]+ " ");
		}
		System.out.println();
	}
	static int insertList(int[] data, int count, int x) {
		int indx = 0;
		
		// index -> 값: index * 5
		int[] result = new int[data.length];
		int i = 0; // data 인덱스
		boolean xPutted = false; // x가 들어가면 true가 됨
		for(int idx = 0; idx < data.length; idx++) {
			// data의 값: data[i]
			
			// xPutted == false : 아직 x 를 result 에 넣지 않음
			// data[i] < x 이면 result[idx] = data[i]; i++;
			// 그외: result[idx] = data[i]; xPutted = true
			if(!xPutted) {
				if(data[i] < x) result[idx] = data[i++];
				else {
					result[idx] = data[i];
					xPutted = true;
				}
			}
			
			// xPutted == true : x 가 result 에 들어감
			// result 에 순서대로 data 의 값을 넣는다, i++;
			if(xPutted) {
				result[idx] = data[i++];
			}
			
			
		}
		
		data = result;
 		
		return idx + 1;
	}
	public static void main(String[] args) {
		int[]list = new int[10];
		int count = 0;
		System.out.println("배열로 리스트::");
		count = getList(list);
		showList(list);
		
		count = insertList(list, count, 3); // 3 들어가고 count 는 배열의 갯수
		showList(list);
		/*
		count = insertList(list, count, 7);
		showList(list);
		
		LinkedList3 ll = new LinkedList3();
		ll.append(5);ll.append(10);ll.append(15);ll.append(20);ll.append(25);
		ll.showList();
		ll.insert(3);ll.showList();
		ll.insert(7);ll.showList();
		*/
	}
}
